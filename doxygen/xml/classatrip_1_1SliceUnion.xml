<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classatrip_1_1SliceUnion" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>atrip::SliceUnion</compoundname>
    <derivedcompoundref refid="structatrip_1_1ABHH" prot="public" virt="non-virtual">atrip::ABHH&lt; F &gt;</derivedcompoundref>
    <derivedcompoundref refid="structatrip_1_1ABPH" prot="public" virt="non-virtual">atrip::ABPH&lt; F &gt;</derivedcompoundref>
    <derivedcompoundref refid="structatrip_1_1HHHA" prot="public" virt="non-virtual">atrip::HHHA&lt; F &gt;</derivedcompoundref>
    <derivedcompoundref refid="structatrip_1_1TABHH" prot="public" virt="non-virtual">atrip::TABHH&lt; F &gt;</derivedcompoundref>
    <derivedcompoundref refid="structatrip_1_1TAPHH" prot="public" virt="non-virtual">atrip::TAPHH&lt; F &gt;</derivedcompoundref>
    <includes refid="SliceUnion_8hpp" local="no">SliceUnion.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename F</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classatrip_1_1SliceUnion_1a39130fcc44d0b5b022e99b5438d714c1" prot="public" static="no">
        <type>CTF::Tensor&lt; F &gt;</type>
        <definition>using atrip::SliceUnion&lt; F &gt;::Tensor =  CTF::Tensor&lt;F&gt;</definition>
        <argsstring></argsstring>
        <name>Tensor</name>
        <qualifiedname>atrip::SliceUnion::Tensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="34" column="5" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" prot="public" static="no" mutable="no">
        <type>const <ref refid="structatrip_1_1RankMap" kindref="compound">RankMap</ref>&lt; F &gt;</type>
        <definition>const RankMap&lt;F&gt; atrip::SliceUnion&lt; F &gt;::rankMap</definition>
        <argsstring></argsstring>
        <name>rankMap</name>
        <qualifiedname>atrip::SliceUnion::rankMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="605" column="19" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="605" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" compoundref="SliceUnion_8hpp" startline="91" endline="256">atrip::SliceUnion&lt; F &gt;::buildLocalDatabase</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" compoundref="SliceUnion_8hpp" startline="464" endline="490">atrip::SliceUnion&lt; F &gt;::init</referencedby>
        <referencedby refid="structatrip_1_1TAPHH_1a4456102eedd76dd1aa09adc66b2882c6" compoundref="Unions_8hpp" startline="99" endline="111">atrip::TAPHH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1HHHA_1aa1e0d1b558a5f2683742262857c72072" compoundref="Unions_8hpp" startline="135" endline="146">atrip::HHHA&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1ABPH_1adfbf9bb767c29498ca52ef495e8d5a9e" compoundref="Unions_8hpp" startline="170" endline="184">atrip::ABPH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1ABHH_1ac862567131b2bcc5b7a4c46e2acb4a89" compoundref="Unions_8hpp" startline="207" endline="222">atrip::ABHH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1TABHH_1ac72a79ea1fa38bbd1e5a459e9b795eb9" compoundref="Unions_8hpp" startline="246" endline="261">atrip::TABHH&lt; F &gt;::sliceIntoBuffer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1a377c5f96161a857289606dd6adfa7632" prot="public" static="no" mutable="no">
        <type>const MPI_Comm</type>
        <definition>const MPI_Comm atrip::SliceUnion&lt; F &gt;::world</definition>
        <argsstring></argsstring>
        <name>world</name>
        <qualifiedname>atrip::SliceUnion::world</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="606" column="20" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="606" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" compoundref="SliceUnion_8hpp" startline="464" endline="490">atrip::SliceUnion&lt; F &gt;::init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1a0d658b0a4e8989473fd51a9ccaf9f166" prot="public" static="no" mutable="no">
        <type>const MPI_Comm</type>
        <definition>const MPI_Comm atrip::SliceUnion&lt; F &gt;::universe</definition>
        <argsstring></argsstring>
        <name>universe</name>
        <qualifiedname>atrip::SliceUnion::universe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="607" column="20" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="607" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1ac467f8809abe557f7b19ac47dc39a3c5" compoundref="SliceUnion_8hpp" startline="522" endline="546">atrip::SliceUnion&lt; F &gt;::receive</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1aec090bd8f9274c1dc4696eb18ac20366" compoundref="SliceUnion_8hpp" startline="495" endline="517">atrip::SliceUnion&lt; F &gt;::send</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; size_t &gt;</type>
        <definition>const std::vector&lt;size_t&gt; atrip::SliceUnion&lt; F &gt;::sliceLength</definition>
        <argsstring></argsstring>
        <name>sliceLength</name>
        <qualifiedname>atrip::SliceUnion::sliceLength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="608" column="23" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="608" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" compoundref="SliceUnion_8hpp" startline="464" endline="490">atrip::SliceUnion&lt; F &gt;::init</referencedby>
        <referencedby refid="structatrip_1_1TAPHH_1a4456102eedd76dd1aa09adc66b2882c6" compoundref="Unions_8hpp" startline="99" endline="111">atrip::TAPHH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1HHHA_1aa1e0d1b558a5f2683742262857c72072" compoundref="Unions_8hpp" startline="135" endline="146">atrip::HHHA&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1ABPH_1adfbf9bb767c29498ca52ef495e8d5a9e" compoundref="Unions_8hpp" startline="170" endline="184">atrip::ABPH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1ABHH_1ac862567131b2bcc5b7a4c46e2acb4a89" compoundref="Unions_8hpp" startline="207" endline="222">atrip::ABHH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1TABHH_1ac72a79ea1fa38bbd1e5a459e9b795eb9" compoundref="Unions_8hpp" startline="246" endline="261">atrip::TABHH&lt; F &gt;::sliceIntoBuffer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1a5b59b6f36eb558f52656222d18bc1add" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t atrip::SliceUnion&lt; F &gt;::sliceSize</definition>
        <argsstring></argsstring>
        <name>sliceSize</name>
        <qualifiedname>atrip::SliceUnion::sliceSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="609" column="18" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="609" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" compoundref="SliceUnion_8hpp" startline="91" endline="256">atrip::SliceUnion&lt; F &gt;::buildLocalDatabase</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1aec090bd8f9274c1dc4696eb18ac20366" compoundref="SliceUnion_8hpp" startline="495" endline="517">atrip::SliceUnion&lt; F &gt;::send</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1a2a6d63388ef1dcfb836755285fe2149a" compoundref="SliceUnion_8hpp" startline="392" endline="462">atrip::SliceUnion&lt; F &gt;::SliceUnion</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; F &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;F&gt; &gt; atrip::SliceUnion&lt; F &gt;::sources</definition>
        <argsstring></argsstring>
        <name>sources</name>
        <qualifiedname>atrip::SliceUnion::sources</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="613" column="17" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="613" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" compoundref="SliceUnion_8hpp" startline="91" endline="256">atrip::SliceUnion&lt; F &gt;::buildLocalDatabase</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1aec090bd8f9274c1dc4696eb18ac20366" compoundref="SliceUnion_8hpp" startline="495" endline="517">atrip::SliceUnion&lt; F &gt;::send</referencedby>
        <referencedby refid="structatrip_1_1TAPHH_1a4456102eedd76dd1aa09adc66b2882c6" compoundref="Unions_8hpp" startline="99" endline="111">atrip::TAPHH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1HHHA_1aa1e0d1b558a5f2683742262857c72072" compoundref="Unions_8hpp" startline="135" endline="146">atrip::HHHA&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1ABPH_1adfbf9bb767c29498ca52ef495e8d5a9e" compoundref="Unions_8hpp" startline="170" endline="184">atrip::ABPH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1ABHH_1ac862567131b2bcc5b7a4c46e2acb4a89" compoundref="Unions_8hpp" startline="207" endline="222">atrip::ABHH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="structatrip_1_1TABHH_1ac72a79ea1fa38bbd1e5a459e9b795eb9" compoundref="Unions_8hpp" startline="246" endline="261">atrip::TABHH&lt; F &gt;::sliceIntoBuffer</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1a2a6d63388ef1dcfb836755285fe2149a" compoundref="SliceUnion_8hpp" startline="392" endline="462">atrip::SliceUnion&lt; F &gt;::SliceUnion</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1a41082ca178c5fe8d391a3f48a3121651" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt; &gt;</type>
        <definition>std::vector&lt; Slice&lt;F&gt; &gt; atrip::SliceUnion&lt; F &gt;::slices</definition>
        <argsstring></argsstring>
        <name>slices</name>
        <qualifiedname>atrip::SliceUnion::slices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="615" column="17" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="615" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" compoundref="SliceUnion_8hpp" startline="91" endline="256">atrip::SliceUnion&lt; F &gt;::buildLocalDatabase</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1a1f8df7551088267451baa50402eb6101" compoundref="SliceUnion_8hpp" startline="45" endline="57">atrip::SliceUnion&lt; F &gt;::checkForDuplicates</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1aca27aa90aacd05da2449e6744f74d135" compoundref="SliceUnion_8hpp" startline="264" endline="389">atrip::SliceUnion&lt; F &gt;::clearUnusedSlicesForNext</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1ac467f8809abe557f7b19ac47dc39a3c5" compoundref="SliceUnion_8hpp" startline="522" endline="546">atrip::SliceUnion&lt; F &gt;::receive</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1a2a6d63388ef1dcfb836755285fe2149a" compoundref="SliceUnion_8hpp" startline="392" endline="462">atrip::SliceUnion&lt; F &gt;::SliceUnion</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1af8b26c4affb8cc43e09315c07272c9d9" compoundref="SliceUnion_8hpp" startline="552" endline="594">atrip::SliceUnion&lt; F &gt;::unwrapSlice</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1ade6e6d7ee37e541213ec57fde50f9855" prot="public" static="no" mutable="no">
        <type><ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt;::Name</type>
        <definition>Slice&lt;F&gt;::Name atrip::SliceUnion&lt; F &gt;::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>atrip::SliceUnion::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="616" column="27" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="616" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" compoundref="SliceUnion_8hpp" startline="91" endline="256">atrip::SliceUnion&lt; F &gt;::buildLocalDatabase</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1aca27aa90aacd05da2449e6744f74d135" compoundref="SliceUnion_8hpp" startline="264" endline="389">atrip::SliceUnion&lt; F &gt;::clearUnusedSlicesForNext</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1a2a6d63388ef1dcfb836755285fe2149a" compoundref="SliceUnion_8hpp" startline="392" endline="462">atrip::SliceUnion&lt; F &gt;::SliceUnion</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1af8b26c4affb8cc43e09315c07272c9d9" compoundref="SliceUnion_8hpp" startline="552" endline="594">atrip::SliceUnion&lt; F &gt;::unwrapSlice</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1a03c48b80d33fc123f36c091be480dd99" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; typename <ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt;::Type &gt;</type>
        <definition>const std::vector&lt;typename Slice&lt;F&gt;::Type&gt; atrip::SliceUnion&lt; F &gt;::sliceTypes</definition>
        <argsstring></argsstring>
        <name>sliceTypes</name>
        <qualifiedname>atrip::SliceUnion::sliceTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="617" column="24" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="617" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1a5c6aff911403f8a09491431863ff842c" compoundref="SliceUnion_8hpp" startline="59" endline="69">atrip::SliceUnion&lt; F &gt;::neededSlices</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1a2a6d63388ef1dcfb836755285fe2149a" compoundref="SliceUnion_8hpp" startline="392" endline="462">atrip::SliceUnion&lt; F &gt;::SliceUnion</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1afd274dc3bf55ce58ffdae76a8720ba76" compoundref="SliceUnion_8hpp" startline="548" endline="550">atrip::SliceUnion&lt; F &gt;::unwrapAll</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1afc17e4ba873e2ebd22b1758920f30e5e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceatrip_1a58948ccd67c60d4ec8ae0058af5ac658" kindref="member">DataPtr</ref>&lt; F &gt; &gt;</type>
        <definition>std::vector&lt; DataPtr&lt;F&gt; &gt; atrip::SliceUnion&lt; F &gt;::sliceBuffers</definition>
        <argsstring></argsstring>
        <name>sliceBuffers</name>
        <qualifiedname>atrip::SliceUnion::sliceBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="618" column="17" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="618" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1a2a6d63388ef1dcfb836755285fe2149a" compoundref="SliceUnion_8hpp" startline="392" endline="462">atrip::SliceUnion&lt; F &gt;::SliceUnion</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1aeb956f245057c50710342754f282655a" compoundref="SliceUnion_8hpp" startline="596" endline="603">atrip::SliceUnion&lt; F &gt;::~SliceUnion</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classatrip_1_1SliceUnion_1a342face36f62091ce59d0a039fff2991" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="namespaceatrip_1a58948ccd67c60d4ec8ae0058af5ac658" kindref="member">DataPtr</ref>&lt; F &gt; &gt;</type>
        <definition>std::set&lt; DataPtr&lt;F&gt; &gt; atrip::SliceUnion&lt; F &gt;::freePointers</definition>
        <argsstring></argsstring>
        <name>freePointers</name>
        <qualifiedname>atrip::SliceUnion::freePointers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="619" column="14" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="619" bodyend="-1"/>
        <referencedby refid="classatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" compoundref="SliceUnion_8hpp" startline="91" endline="256">atrip::SliceUnion&lt; F &gt;::buildLocalDatabase</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1aca27aa90aacd05da2449e6744f74d135" compoundref="SliceUnion_8hpp" startline="264" endline="389">atrip::SliceUnion&lt; F &gt;::clearUnusedSlicesForNext</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1a2a6d63388ef1dcfb836755285fe2149a" compoundref="SliceUnion_8hpp" startline="392" endline="462">atrip::SliceUnion&lt; F &gt;::SliceUnion</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1afa84b93605e0b2a88c96e1380774f67c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void atrip::SliceUnion&lt; F &gt;::sliceIntoBuffer</definition>
        <argsstring>(size_t iteration, Tensor &amp;to, Tensor const &amp;from)=0</argsstring>
        <name>sliceIntoBuffer</name>
        <qualifiedname>atrip::SliceUnion::sliceIntoBuffer</qualifiedname>
        <reimplementedby refid="structatrip_1_1TAPHH_1a4456102eedd76dd1aa09adc66b2882c6">sliceIntoBuffer</reimplementedby>
        <reimplementedby refid="structatrip_1_1HHHA_1aa1e0d1b558a5f2683742262857c72072">sliceIntoBuffer</reimplementedby>
        <reimplementedby refid="structatrip_1_1ABPH_1adfbf9bb767c29498ca52ef495e8d5a9e">sliceIntoBuffer</reimplementedby>
        <reimplementedby refid="structatrip_1_1ABHH_1ac862567131b2bcc5b7a4c46e2acb4a89">sliceIntoBuffer</reimplementedby>
        <reimplementedby refid="structatrip_1_1TABHH_1ac72a79ea1fa38bbd1e5a459e9b795eb9">sliceIntoBuffer</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>iteration</declname>
        </param>
        <param>
          <type><ref refid="classatrip_1_1SliceUnion_1a39130fcc44d0b5b022e99b5438d714c1" kindref="member">Tensor</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="classatrip_1_1SliceUnion_1a39130fcc44d0b5b022e99b5438d714c1" kindref="member">Tensor</ref> const &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="37" column="5"/>
        <referencedby refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" compoundref="SliceUnion_8hpp" startline="464" endline="490">atrip::SliceUnion&lt; F &gt;::init</referencedby>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1a1f8df7551088267451baa50402eb6101" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void atrip::SliceUnion&lt; F &gt;::checkForDuplicates</definition>
        <argsstring>() const</argsstring>
        <name>checkForDuplicates</name>
        <qualifiedname>atrip::SliceUnion::checkForDuplicates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="45" column="10" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="45" bodyend="57"/>
        <references refid="classatrip_1_1SliceUnion_1a41082ca178c5fe8d391a3f48a3121651" compoundref="SliceUnion_8hpp" startline="615">atrip::SliceUnion&lt; F &gt;::slices</references>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1a5c6aff911403f8a09491431863ff842c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; typename <ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt;::Ty_x_Tu &gt;</type>
        <definition>std::vector&lt; typename Slice&lt; F &gt;::Ty_x_Tu &gt; atrip::SliceUnion&lt; F &gt;::neededSlices</definition>
        <argsstring>(ABCTuple const &amp;abc)</argsstring>
        <name>neededSlices</name>
        <qualifiedname>atrip::SliceUnion::neededSlices</qualifiedname>
        <param>
          <type><ref refid="namespaceatrip_1af838c7ed7996be477f99aad86114f26b" kindref="member">ABCTuple</ref> const &amp;</type>
          <declname>abc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="59" column="18" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="59" bodyend="69"/>
        <references refid="classatrip_1_1SliceUnion_1a03c48b80d33fc123f36c091be480dd99" compoundref="SliceUnion_8hpp" startline="617">atrip::SliceUnion&lt; F &gt;::sliceTypes</references>
        <referencedby refid="classatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" compoundref="SliceUnion_8hpp" startline="91" endline="256">atrip::SliceUnion&lt; F &gt;::buildLocalDatabase</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1aca27aa90aacd05da2449e6744f74d135" compoundref="SliceUnion_8hpp" startline="264" endline="389">atrip::SliceUnion&lt; F &gt;::clearUnusedSlicesForNext</referencedby>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt;::LocalDatabase</type>
        <definition>Slice&lt; F &gt;::LocalDatabase atrip::SliceUnion&lt; F &gt;::buildLocalDatabase</definition>
        <argsstring>(ABCTuple const &amp;abc)</argsstring>
        <name>buildLocalDatabase</name>
        <qualifiedname>atrip::SliceUnion::buildLocalDatabase</qualifiedname>
        <param>
          <type><ref refid="namespaceatrip_1af838c7ed7996be477f99aad86114f26b" kindref="member">ABCTuple</ref> const &amp;</type>
          <declname>abc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="91" column="27" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="91" bodyend="256"/>
        <references refid="CUDA_8hpp_1a2e6d5173a73fe3fdffed8acc4909f87e" compoundref="CUDA_8hpp" startline="19">_CHECK_CUDA_SUCCESS</references>
        <references refid="structatrip_1_1Slice_1a6a91e8f8b4520104947fcbce8733f7a6" compoundref="Slice_8hpp" startline="354">atrip::Slice&lt; F &gt;::data</references>
        <references refid="structatrip_1_1Slice_1a7aa07601e9f23db70b9e97f7bcb3d979" compoundref="Slice_8hpp" startline="255" endline="267">atrip::Slice&lt; F &gt;::findOneByType</references>
        <references refid="classatrip_1_1SliceUnion_1a342face36f62091ce59d0a039fff2991" compoundref="SliceUnion_8hpp" startline="619">atrip::SliceUnion&lt; F &gt;::freePointers</references>
        <references refid="structatrip_1_1Slice_1_1Info_1ab096637d74752ff7c072bc34812618b6" compoundref="Slice_8hpp" startline="76">atrip::Slice&lt; F &gt;::Info::from</references>
        <references refid="structatrip_1_1Slice_1a5d20248fbeeed357af5abfa31c9f0d1b" compoundref="Slice_8hpp" startline="350">atrip::Slice&lt; F &gt;::info</references>
        <references refid="classatrip_1_1SliceUnion_1ade6e6d7ee37e541213ec57fde50f9855" compoundref="SliceUnion_8hpp" startline="616">atrip::SliceUnion&lt; F &gt;::name</references>
        <references refid="classatrip_1_1SliceUnion_1a5c6aff911403f8a09491431863ff842c" compoundref="SliceUnion_8hpp" startline="59" endline="69">atrip::SliceUnion&lt; F &gt;::neededSlices</references>
        <references refid="namespaceatrip_1a3178eea10b83bd01a95ca222be291c1f" compoundref="Utils_8hpp" startline="54" endline="62">atrip::pretty_print</references>
        <references refid="structatrip_1_1Atrip_1a551003e8a101a98960032754ed4fd6ad" compoundref="Atrip_8hpp" startline="44">atrip::Atrip::rank</references>
        <references refid="classatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" compoundref="SliceUnion_8hpp" startline="605">atrip::SliceUnion&lt; F &gt;::rankMap</references>
        <references refid="classatrip_1_1SliceUnion_1a41082ca178c5fe8d391a3f48a3121651" compoundref="SliceUnion_8hpp" startline="615">atrip::SliceUnion&lt; F &gt;::slices</references>
        <references refid="classatrip_1_1SliceUnion_1a5b59b6f36eb558f52656222d18bc1add" compoundref="SliceUnion_8hpp" startline="609">atrip::SliceUnion&lt; F &gt;::sliceSize</references>
        <references refid="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" compoundref="SliceUnion_8hpp" startline="613">atrip::SliceUnion&lt; F &gt;::sources</references>
        <references refid="SliceUnion_8hpp_1acb82a526c84a9d293b9f6268e46dc388" compoundref="SliceUnion_8hpp" startline="24">SOURCES_DATA</references>
        <references refid="Utils_8hpp_1a684c98edc7c431d9fa25c1d75ae42f83" compoundref="Utils_8hpp" startline="67">WITH_CHRONO</references>
        <references refid="Debug_8hpp_1a3f86e6b81edd7297ee6f9fd44cba3149" compoundref="Debug_8hpp" startline="70">WITH_RANK</references>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1aca27aa90aacd05da2449e6744f74d135" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void atrip::SliceUnion&lt; F &gt;::clearUnusedSlicesForNext</definition>
        <argsstring>(ABCTuple const &amp;abc)</argsstring>
        <name>clearUnusedSlicesForNext</name>
        <qualifiedname>atrip::SliceUnion::clearUnusedSlicesForNext</qualifiedname>
        <param>
          <type><ref refid="namespaceatrip_1af838c7ed7996be477f99aad86114f26b" kindref="member">ABCTuple</ref> const &amp;</type>
          <declname>abc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="264" column="10" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="264" bodyend="389"/>
        <references refid="structatrip_1_1Slice_1a6a91e8f8b4520104947fcbce8733f7a6" compoundref="Slice_8hpp" startline="354">atrip::Slice&lt; F &gt;::data</references>
        <references refid="structatrip_1_1Slice_1a44cca23ee01b498d8b9b725555f31481" compoundref="Slice_8hpp" startline="395" endline="402">atrip::Slice&lt; F &gt;::free</references>
        <references refid="classatrip_1_1SliceUnion_1a342face36f62091ce59d0a039fff2991" compoundref="SliceUnion_8hpp" startline="619">atrip::SliceUnion&lt; F &gt;::freePointers</references>
        <references refid="structatrip_1_1Slice_1a4920626f4572e699367835f9a4be18b2" compoundref="Slice_8hpp" startline="239" endline="251">atrip::Slice&lt; F &gt;::hasRecycledReferencingToIt</references>
        <references refid="structatrip_1_1Slice_1a5d20248fbeeed357af5abfa31c9f0d1b" compoundref="Slice_8hpp" startline="350">atrip::Slice&lt; F &gt;::info</references>
        <references refid="structatrip_1_1Slice_1aea2369215b927bc117bbad21e4aa2b35" compoundref="Slice_8hpp" startline="369" endline="372">atrip::Slice&lt; F &gt;::markReady</references>
        <references refid="classatrip_1_1SliceUnion_1ade6e6d7ee37e541213ec57fde50f9855" compoundref="SliceUnion_8hpp" startline="616">atrip::SliceUnion&lt; F &gt;::name</references>
        <references refid="classatrip_1_1SliceUnion_1a5c6aff911403f8a09491431863ff842c" compoundref="SliceUnion_8hpp" startline="59" endline="69">atrip::SliceUnion&lt; F &gt;::neededSlices</references>
        <references refid="namespaceatrip_1a3178eea10b83bd01a95ca222be291c1f" compoundref="Utils_8hpp" startline="54" endline="62">atrip::pretty_print</references>
        <references refid="classatrip_1_1SliceUnion_1a41082ca178c5fe8d391a3f48a3121651" compoundref="SliceUnion_8hpp" startline="615">atrip::SliceUnion&lt; F &gt;::slices</references>
        <references refid="structatrip_1_1Slice_1_1Info_1a95ae928785594ad332204f3377cd241e" compoundref="Slice_8hpp" startline="74">atrip::Slice&lt; F &gt;::Info::state</references>
        <references refid="structatrip_1_1Slice_1_1Info_1a906b399e728a367f9c64cdb87ec53dc0" compoundref="Slice_8hpp" startline="72">atrip::Slice&lt; F &gt;::Info::type</references>
        <references refid="Debug_8hpp_1a321f8f2fd92f00a4da2fe732c4198132" compoundref="Debug_8hpp" startline="67">WITH_OCD</references>
        <references refid="Debug_8hpp_1a3f86e6b81edd7297ee6f9fd44cba3149" compoundref="Debug_8hpp" startline="70">WITH_RANK</references>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1a2a6d63388ef1dcfb836755285fe2149a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>atrip::SliceUnion&lt; F &gt;::SliceUnion</definition>
        <argsstring>(std::vector&lt; typename Slice&lt; F &gt;::Type &gt; sliceTypes_, std::vector&lt; size_t &gt; sliceLength_, std::vector&lt; size_t &gt; paramLength, size_t np, MPI_Comm child_world, MPI_Comm global_world, typename Slice&lt; F &gt;::Name name_, size_t nSliceBuffers=4)</argsstring>
        <name>SliceUnion</name>
        <qualifiedname>atrip::SliceUnion::SliceUnion</qualifiedname>
        <param>
          <type>std::vector&lt; typename <ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt;::Type &gt;</type>
          <declname>sliceTypes_</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt;</type>
          <declname>sliceLength_</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt;</type>
          <declname>paramLength</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>np</declname>
        </param>
        <param>
          <type>MPI_Comm</type>
          <declname>child_world</declname>
        </param>
        <param>
          <type>MPI_Comm</type>
          <declname>global_world</declname>
        </param>
        <param>
          <type>typename <ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt;::Name</type>
          <declname>name_</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nSliceBuffers</declname>
          <defval>4</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="392" column="5" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="392" bodyend="462"/>
        <references refid="classatrip_1_1SliceUnion_1a342face36f62091ce59d0a039fff2991" compoundref="SliceUnion_8hpp" startline="619">atrip::SliceUnion&lt; F &gt;::freePointers</references>
        <references refid="Debug_8hpp_1aab91ba8612c2b67dad4376d30871eb95" compoundref="Debug_8hpp" startline="79">LOG</references>
        <references refid="classatrip_1_1SliceUnion_1ade6e6d7ee37e541213ec57fde50f9855" compoundref="SliceUnion_8hpp" startline="616">atrip::SliceUnion&lt; F &gt;::name</references>
        <references refid="classatrip_1_1SliceUnion_1afc17e4ba873e2ebd22b1758920f30e5e" compoundref="SliceUnion_8hpp" startline="618">atrip::SliceUnion&lt; F &gt;::sliceBuffers</references>
        <references refid="classatrip_1_1SliceUnion_1a41082ca178c5fe8d391a3f48a3121651" compoundref="SliceUnion_8hpp" startline="615">atrip::SliceUnion&lt; F &gt;::slices</references>
        <references refid="classatrip_1_1SliceUnion_1a5b59b6f36eb558f52656222d18bc1add" compoundref="SliceUnion_8hpp" startline="609">atrip::SliceUnion&lt; F &gt;::sliceSize</references>
        <references refid="classatrip_1_1SliceUnion_1a03c48b80d33fc123f36c091be480dd99" compoundref="SliceUnion_8hpp" startline="617">atrip::SliceUnion&lt; F &gt;::sliceTypes</references>
        <references refid="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" compoundref="SliceUnion_8hpp" startline="613">atrip::SliceUnion&lt; F &gt;::sources</references>
        <references refid="Debug_8hpp_1a3f86e6b81edd7297ee6f9fd44cba3149" compoundref="Debug_8hpp" startline="70">WITH_RANK</references>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void atrip::SliceUnion&lt; F &gt;::init</definition>
        <argsstring>(Tensor const &amp;sourceTensor)</argsstring>
        <name>init</name>
        <qualifiedname>atrip::SliceUnion::init</qualifiedname>
        <param>
          <type><ref refid="classatrip_1_1SliceUnion_1a39130fcc44d0b5b022e99b5438d714c1" kindref="member">Tensor</ref> const &amp;</type>
          <declname>sourceTensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="464" column="10" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="464" bodyend="490"/>
        <references refid="structatrip_1_1Atrip_1a551003e8a101a98960032754ed4fd6ad" compoundref="Atrip_8hpp" startline="44">atrip::Atrip::rank</references>
        <references refid="classatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" compoundref="SliceUnion_8hpp" startline="605">atrip::SliceUnion&lt; F &gt;::rankMap</references>
        <references refid="classatrip_1_1SliceUnion_1afa84b93605e0b2a88c96e1380774f67c">atrip::SliceUnion&lt; F &gt;::sliceIntoBuffer</references>
        <references refid="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" compoundref="SliceUnion_8hpp" startline="608">atrip::SliceUnion&lt; F &gt;::sliceLength</references>
        <references refid="Debug_8hpp_1a321f8f2fd92f00a4da2fe732c4198132" compoundref="Debug_8hpp" startline="67">WITH_OCD</references>
        <references refid="Debug_8hpp_1a3f86e6b81edd7297ee6f9fd44cba3149" compoundref="Debug_8hpp" startline="70">WITH_RANK</references>
        <references refid="classatrip_1_1SliceUnion_1a377c5f96161a857289606dd6adfa7632" compoundref="SliceUnion_8hpp" startline="606">atrip::SliceUnion&lt; F &gt;::world</references>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1aec090bd8f9274c1dc4696eb18ac20366" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void atrip::SliceUnion&lt; F &gt;::send</definition>
        <argsstring>(size_t otherRank, typename Slice&lt; F &gt;::LocalDatabaseElement const &amp;el, size_t tag) const noexcept</argsstring>
        <name>send</name>
        <qualifiedname>atrip::SliceUnion::send</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>otherRank</declname>
        </param>
        <param>
          <type>typename <ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt;::LocalDatabaseElement const &amp;</type>
          <declname>el</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
<para>Send asynchronously only if the state is Fetch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="495" column="10" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="495" bodyend="517"/>
        <references refid="classatrip_1_1SliceUnion_1a5b59b6f36eb558f52656222d18bc1add" compoundref="SliceUnion_8hpp" startline="609">atrip::SliceUnion&lt; F &gt;::sliceSize</references>
        <references refid="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" compoundref="SliceUnion_8hpp" startline="613">atrip::SliceUnion&lt; F &gt;::sources</references>
        <references refid="SliceUnion_8hpp_1acb82a526c84a9d293b9f6268e46dc388" compoundref="SliceUnion_8hpp" startline="24">SOURCES_DATA</references>
        <references refid="classatrip_1_1SliceUnion_1a0d658b0a4e8989473fd51a9ccaf9f166" compoundref="SliceUnion_8hpp" startline="607">atrip::SliceUnion&lt; F &gt;::universe</references>
        <references refid="Debug_8hpp_1ac0c1f2990209029f452a33e8ae2206cd" compoundref="Debug_8hpp" startline="72">WITH_CRAZY_DEBUG</references>
        <references refid="Debug_8hpp_1a3f86e6b81edd7297ee6f9fd44cba3149" compoundref="Debug_8hpp" startline="70">WITH_RANK</references>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1ac467f8809abe557f7b19ac47dc39a3c5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void atrip::SliceUnion&lt; F &gt;::receive</definition>
        <argsstring>(typename Slice&lt; F &gt;::Info const &amp;info, size_t tag) noexcept</argsstring>
        <name>receive</name>
        <qualifiedname>atrip::SliceUnion::receive</qualifiedname>
        <param>
          <type>typename <ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt;::Info const &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
<para>Receive asynchronously only if the state is Fetch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="522" column="10" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="522" bodyend="546"/>
        <references refid="structatrip_1_1Slice_1aac3a4c4281d2ff9e3c2a0060d3a5aa4a" compoundref="Slice_8hpp" startline="327" endline="346">atrip::Slice&lt; F &gt;::findByInfo</references>
        <references refid="structatrip_1_1Atrip_1a551003e8a101a98960032754ed4fd6ad" compoundref="Atrip_8hpp" startline="44">atrip::Atrip::rank</references>
        <references refid="classatrip_1_1SliceUnion_1a41082ca178c5fe8d391a3f48a3121651" compoundref="SliceUnion_8hpp" startline="615">atrip::SliceUnion&lt; F &gt;::slices</references>
        <references refid="classatrip_1_1SliceUnion_1a0d658b0a4e8989473fd51a9ccaf9f166" compoundref="SliceUnion_8hpp" startline="607">atrip::SliceUnion&lt; F &gt;::universe</references>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1afd274dc3bf55ce58ffdae76a8720ba76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void atrip::SliceUnion&lt; F &gt;::unwrapAll</definition>
        <argsstring>(ABCTuple const &amp;abc)</argsstring>
        <name>unwrapAll</name>
        <qualifiedname>atrip::SliceUnion::unwrapAll</qualifiedname>
        <param>
          <type><ref refid="namespaceatrip_1af838c7ed7996be477f99aad86114f26b" kindref="member">ABCTuple</ref> const &amp;</type>
          <declname>abc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="548" column="10" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="548" bodyend="550"/>
        <references refid="classatrip_1_1SliceUnion_1a03c48b80d33fc123f36c091be480dd99" compoundref="SliceUnion_8hpp" startline="617">atrip::SliceUnion&lt; F &gt;::sliceTypes</references>
        <references refid="classatrip_1_1SliceUnion_1af8b26c4affb8cc43e09315c07272c9d9" compoundref="SliceUnion_8hpp" startline="552" endline="594">atrip::SliceUnion&lt; F &gt;::unwrapSlice</references>
        <referencedby refid="structatrip_1_1Atrip_1ac414d43de30968cc92a6f7a44e5cd9b6" compoundref="Atrip_8cxx" startline="56" endline="837">atrip::Atrip::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1af8b26c4affb8cc43e09315c07272c9d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceatrip_1a58948ccd67c60d4ec8ae0058af5ac658" kindref="member">DataPtr</ref>&lt; F &gt;</type>
        <definition>DataPtr&lt; F &gt; atrip::SliceUnion&lt; F &gt;::unwrapSlice</definition>
        <argsstring>(typename Slice&lt; F &gt;::Type type, ABCTuple const &amp;abc)</argsstring>
        <name>unwrapSlice</name>
        <qualifiedname>atrip::SliceUnion::unwrapSlice</qualifiedname>
        <param>
          <type>typename <ref refid="structatrip_1_1Slice" kindref="compound">Slice</ref>&lt; F &gt;::Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespaceatrip_1af838c7ed7996be477f99aad86114f26b" kindref="member">ABCTuple</ref> const &amp;</type>
          <declname>abc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="552" column="13" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="552" bodyend="594"/>
        <references refid="structatrip_1_1Slice_1ab57c0d9c391694a84abe5327cd5fa1b4" compoundref="Slice_8hpp" startline="298" endline="323">atrip::Slice&lt; F &gt;::findByTypeAbc</references>
        <references refid="classatrip_1_1SliceUnion_1ade6e6d7ee37e541213ec57fde50f9855" compoundref="SliceUnion_8hpp" startline="616">atrip::SliceUnion&lt; F &gt;::name</references>
        <references refid="namespaceatrip_1a3178eea10b83bd01a95ca222be291c1f" compoundref="Utils_8hpp" startline="54" endline="62">atrip::pretty_print</references>
        <references refid="classatrip_1_1SliceUnion_1a41082ca178c5fe8d391a3f48a3121651" compoundref="SliceUnion_8hpp" startline="615">atrip::SliceUnion&lt; F &gt;::slices</references>
        <references refid="classatrip_1_1SliceUnion_1af8b26c4affb8cc43e09315c07272c9d9" compoundref="SliceUnion_8hpp" startline="552" endline="594">atrip::SliceUnion&lt; F &gt;::unwrapSlice</references>
        <references refid="Debug_8hpp_1ac0c1f2990209029f452a33e8ae2206cd" compoundref="Debug_8hpp" startline="72">WITH_CRAZY_DEBUG</references>
        <references refid="Debug_8hpp_1a3f86e6b81edd7297ee6f9fd44cba3149" compoundref="Debug_8hpp" startline="70">WITH_RANK</references>
        <referencedby refid="structatrip_1_1Atrip_1ac414d43de30968cc92a6f7a44e5cd9b6" compoundref="Atrip_8cxx" startline="56" endline="837">atrip::Atrip::run</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1afd274dc3bf55ce58ffdae76a8720ba76" compoundref="SliceUnion_8hpp" startline="548" endline="550">atrip::SliceUnion&lt; F &gt;::unwrapAll</referencedby>
        <referencedby refid="classatrip_1_1SliceUnion_1af8b26c4affb8cc43e09315c07272c9d9" compoundref="SliceUnion_8hpp" startline="552" endline="594">atrip::SliceUnion&lt; F &gt;::unwrapSlice</referencedby>
      </memberdef>
      <memberdef kind="function" id="classatrip_1_1SliceUnion_1aeb956f245057c50710342754f282655a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>atrip::SliceUnion&lt; F &gt;::~SliceUnion</definition>
        <argsstring>()</argsstring>
        <name>~SliceUnion</name>
        <qualifiedname>atrip::SliceUnion::~SliceUnion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="596" column="5" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="596" bodyend="603"/>
        <references refid="classatrip_1_1SliceUnion_1afc17e4ba873e2ebd22b1758920f30e5e" compoundref="SliceUnion_8hpp" startline="618">atrip::SliceUnion&lt; F &gt;::sliceBuffers</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>atrip::SliceUnion&lt; double &gt;</label>
        <link refid="classatrip_1_1SliceUnion"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>atrip::ABHH&lt; F &gt;</label>
        <link refid="structatrip_1_1ABHH"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>atrip::ABPH&lt; F &gt;</label>
        <link refid="structatrip_1_1ABPH"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>atrip::HHHA&lt; F &gt;</label>
        <link refid="structatrip_1_1HHHA"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>atrip::SliceUnion&lt; F &gt;</label>
        <link refid="classatrip_1_1SliceUnion"/>
      </node>
      <node id="5">
        <label>atrip::TABHH&lt; F &gt;</label>
        <link refid="structatrip_1_1TABHH"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>atrip::TAPHH&lt; F &gt;</label>
        <link refid="structatrip_1_1TAPHH"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>atrip::RankMap&lt; double &gt;</label>
        <link refid="structatrip_1_1RankMap"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+clusterInfo</edgelabel>
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>atrip::Slice&lt; double &gt;</label>
        <link refid="structatrip_1_1Slice"/>
        <childnode refid="6" relation="usage">
          <edgelabel>+info</edgelabel>
        </childnode>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>atrip::ClusterInfo</label>
        <link refid="structatrip_1_1ClusterInfo"/>
      </node>
      <node id="4">
        <label>atrip::RankMap&lt; F &gt;</label>
        <link refid="structatrip_1_1RankMap"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+clusterInfo</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>atrip::Slice&lt; F &gt;</label>
        <link refid="structatrip_1_1Slice"/>
        <childnode refid="6" relation="usage">
          <edgelabel>+info</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>atrip::Slice&lt; F &gt;::Info</label>
        <link refid="structatrip_1_1Slice_1_1Info"/>
        <childnode refid="7" relation="usage">
          <edgelabel>+from</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>atrip::Slice&lt; F &gt;::Location</label>
        <link refid="structatrip_1_1Slice_1_1Location"/>
      </node>
      <node id="1">
        <label>atrip::SliceUnion&lt; F &gt;</label>
        <link refid="classatrip_1_1SliceUnion"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+rankMap</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+name</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" line="32" column="3" bodyfile="/home/runner/work/atrip/atrip/include/atrip/SliceUnion.hpp" bodystart="32" bodyend="621"/>
    <listofallmembers>
      <member refid="classatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>buildLocalDatabase</name></member>
      <member refid="classatrip_1_1SliceUnion_1a1f8df7551088267451baa50402eb6101" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>checkForDuplicates</name></member>
      <member refid="classatrip_1_1SliceUnion_1aca27aa90aacd05da2449e6744f74d135" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>clearUnusedSlicesForNext</name></member>
      <member refid="classatrip_1_1SliceUnion_1a342face36f62091ce59d0a039fff2991" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>freePointers</name></member>
      <member refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>init</name></member>
      <member refid="classatrip_1_1SliceUnion_1ade6e6d7ee37e541213ec57fde50f9855" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>name</name></member>
      <member refid="classatrip_1_1SliceUnion_1a5c6aff911403f8a09491431863ff842c" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>neededSlices</name></member>
      <member refid="classatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>rankMap</name></member>
      <member refid="classatrip_1_1SliceUnion_1ac467f8809abe557f7b19ac47dc39a3c5" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>receive</name></member>
      <member refid="classatrip_1_1SliceUnion_1aec090bd8f9274c1dc4696eb18ac20366" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>send</name></member>
      <member refid="classatrip_1_1SliceUnion_1afc17e4ba873e2ebd22b1758920f30e5e" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>sliceBuffers</name></member>
      <member refid="classatrip_1_1SliceUnion_1afa84b93605e0b2a88c96e1380774f67c" prot="public" virt="pure-virtual"><scope>atrip::SliceUnion</scope><name>sliceIntoBuffer</name></member>
      <member refid="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>sliceLength</name></member>
      <member refid="classatrip_1_1SliceUnion_1a41082ca178c5fe8d391a3f48a3121651" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>slices</name></member>
      <member refid="classatrip_1_1SliceUnion_1a5b59b6f36eb558f52656222d18bc1add" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>sliceSize</name></member>
      <member refid="classatrip_1_1SliceUnion_1a03c48b80d33fc123f36c091be480dd99" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>sliceTypes</name></member>
      <member refid="classatrip_1_1SliceUnion_1a2a6d63388ef1dcfb836755285fe2149a" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>SliceUnion</name></member>
      <member refid="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>sources</name></member>
      <member refid="classatrip_1_1SliceUnion_1a39130fcc44d0b5b022e99b5438d714c1" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>Tensor</name></member>
      <member refid="classatrip_1_1SliceUnion_1a0d658b0a4e8989473fd51a9ccaf9f166" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>universe</name></member>
      <member refid="classatrip_1_1SliceUnion_1afd274dc3bf55ce58ffdae76a8720ba76" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>unwrapAll</name></member>
      <member refid="classatrip_1_1SliceUnion_1af8b26c4affb8cc43e09315c07272c9d9" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>unwrapSlice</name></member>
      <member refid="classatrip_1_1SliceUnion_1a377c5f96161a857289606dd6adfa7632" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>world</name></member>
      <member refid="classatrip_1_1SliceUnion_1aeb956f245057c50710342754f282655a" prot="public" virt="non-virtual"><scope>atrip::SliceUnion</scope><name>~SliceUnion</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
