<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="structatrip_1_1TAPHH" kind="struct" language="C++" prot="public">
    <compoundname>atrip::TAPHH</compoundname>
    <basecompoundref refid="structatrip_1_1SliceUnion" prot="public" virt="non-virtual">atrip::SliceUnion&lt; double &gt;</basecompoundref>
    <includes refid="Unions_8hpp" local="no">Unions.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename F</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structatrip_1_1TAPHH_1aa4be7b8ef10aa7f4fdddf632010da076" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>atrip::TAPHH&lt; F &gt;::TAPHH</definition>
        <argsstring>(CTF::Tensor&lt; F &gt; const &amp;sourceTensor, size_t No, size_t Nv, size_t np, MPI_Comm child_world, MPI_Comm global_world)</argsstring>
        <name>TAPHH</name>
        <qualifiedname>atrip::TAPHH::TAPHH</qualifiedname>
        <param>
          <type>CTF::Tensor&lt; F &gt; const &amp;</type>
          <declname>sourceTensor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>No</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>Nv</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>np</declname>
        </param>
        <param>
          <type>MPI_Comm</type>
          <declname>child_world</declname>
        </param>
        <param>
          <type>MPI_Comm</type>
          <declname>global_world</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Unions.hpp" line="62" column="5" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Unions.hpp" bodystart="62" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structatrip_1_1TAPHH_1a4456102eedd76dd1aa09adc66b2882c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void atrip::TAPHH&lt; F &gt;::sliceIntoBuffer</definition>
        <argsstring>(size_t it, CTF::Tensor&lt; F &gt; &amp;to, CTF::Tensor&lt; F &gt; const &amp;from) override</argsstring>
        <name>sliceIntoBuffer</name>
        <qualifiedname>atrip::TAPHH::sliceIntoBuffer</qualifiedname>
        <reimplements refid="structatrip_1_1SliceUnion_1afa84b93605e0b2a88c96e1380774f67c">sliceIntoBuffer</reimplements>
        <param>
          <type>size_t</type>
          <declname>it</declname>
        </param>
        <param>
          <type>CTF::Tensor&lt; F &gt; &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>CTF::Tensor&lt; F &gt; const &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Unions.hpp" line="80" column="10" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Unions.hpp" bodystart="80" bodyend="93"/>
        <references refid="structatrip_1_1Atrip_1a384ab5ffeacf4d84a5c614f6c0621a17" compoundref="Atrip_8hpp" startline="36">atrip::Atrip::rank</references>
        <references refid="structatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" compoundref="SliceUnion_8hpp" startline="542">atrip::SliceUnion&lt; F &gt;::rankMap</references>
        <references refid="structatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" compoundref="SliceUnion_8hpp" startline="545">atrip::SliceUnion&lt; F &gt;::sliceLength</references>
        <references refid="structatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" compoundref="SliceUnion_8hpp" startline="546">atrip::SliceUnion&lt; F &gt;::sources</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>atrip::SliceUnion&lt; F &gt;</label>
        <link refid="structatrip_1_1SliceUnion"/>
      </node>
      <node id="1">
        <label>atrip::TAPHH&lt; F &gt;</label>
        <link refid="structatrip_1_1TAPHH"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>atrip::RankMap&lt; double &gt;</label>
        <link refid="structatrip_1_1RankMap"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+clusterInfo</edgelabel>
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>atrip::Slice&lt; double &gt;</label>
        <link refid="structatrip_1_1Slice"/>
        <childnode refid="7" relation="usage">
          <edgelabel>+info</edgelabel>
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>atrip::ClusterInfo</label>
        <link refid="structatrip_1_1ClusterInfo"/>
      </node>
      <node id="5">
        <label>atrip::RankMap&lt; F &gt;</label>
        <link refid="structatrip_1_1RankMap"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+clusterInfo</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>atrip::Slice&lt; F &gt;</label>
        <link refid="structatrip_1_1Slice"/>
        <childnode refid="7" relation="usage">
          <edgelabel>+info</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>atrip::Slice&lt; F &gt;::Info</label>
        <link refid="structatrip_1_1Slice_1_1Info"/>
        <childnode refid="8" relation="usage">
          <edgelabel>+from</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>atrip::Slice&lt; F &gt;::Location</label>
        <link refid="structatrip_1_1Slice_1_1Location"/>
      </node>
      <node id="2">
        <label>atrip::SliceUnion&lt; F &gt;</label>
        <link refid="structatrip_1_1SliceUnion"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+rankMap</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+name</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>atrip::TAPHH&lt; F &gt;</label>
        <link refid="structatrip_1_1TAPHH"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/atrip/atrip/include/atrip/Unions.hpp" line="61" column="3" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Unions.hpp" bodystart="61" bodyend="95"/>
    <listofallmembers>
      <member refid="structatrip_1_1SliceUnion_1acd3fd6a31d2e3157805f1b1e0f281276" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>buildLocalDatabase</name></member>
      <member refid="structatrip_1_1SliceUnion_1a1f8df7551088267451baa50402eb6101" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>checkForDuplicates</name></member>
      <member refid="structatrip_1_1SliceUnion_1aca27aa90aacd05da2449e6744f74d135" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>clearUnusedSlicesForNext</name></member>
      <member refid="structatrip_1_1SliceUnion_1ad0424b251863ec34e43bf65b977d26d2" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>freePointers</name></member>
      <member refid="structatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>init</name></member>
      <member refid="structatrip_1_1SliceUnion_1ade6e6d7ee37e541213ec57fde50f9855" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>name</name></member>
      <member refid="structatrip_1_1SliceUnion_1a5c6aff911403f8a09491431863ff842c" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>neededSlices</name></member>
      <member refid="structatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>rankMap</name></member>
      <member refid="structatrip_1_1SliceUnion_1ac467f8809abe557f7b19ac47dc39a3c5" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>receive</name></member>
      <member refid="structatrip_1_1SliceUnion_1aec090bd8f9274c1dc4696eb18ac20366" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>send</name></member>
      <member refid="structatrip_1_1SliceUnion_1a3ce1e87ce77c90131de1b647769ec518" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>sliceBuffers</name></member>
      <member refid="structatrip_1_1TAPHH_1a4456102eedd76dd1aa09adc66b2882c6" prot="public" virt="virtual"><scope>atrip::TAPHH</scope><name>sliceIntoBuffer</name></member>
      <member refid="structatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>sliceLength</name></member>
      <member refid="structatrip_1_1SliceUnion_1a41082ca178c5fe8d391a3f48a3121651" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>slices</name></member>
      <member refid="structatrip_1_1SliceUnion_1a03c48b80d33fc123f36c091be480dd99" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>sliceTypes</name></member>
      <member refid="structatrip_1_1SliceUnion_1a2146573b2ddf3ac8dae01a5bb70d983b" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>SliceUnion</name></member>
      <member refid="structatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>sources</name></member>
      <member refid="structatrip_1_1TAPHH_1aa4be7b8ef10aa7f4fdddf632010da076" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>TAPHH</name></member>
      <member refid="structatrip_1_1SliceUnion_1a39130fcc44d0b5b022e99b5438d714c1" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>Tensor</name></member>
      <member refid="structatrip_1_1SliceUnion_1a0d658b0a4e8989473fd51a9ccaf9f166" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>universe</name></member>
      <member refid="structatrip_1_1SliceUnion_1afd274dc3bf55ce58ffdae76a8720ba76" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>unwrapAll</name></member>
      <member refid="structatrip_1_1SliceUnion_1a4818f008af7820a86f8b68669d69b9d0" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>unwrapSlice</name></member>
      <member refid="structatrip_1_1SliceUnion_1a377c5f96161a857289606dd6adfa7632" prot="public" virt="non-virtual"><scope>atrip::TAPHH</scope><name>world</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
