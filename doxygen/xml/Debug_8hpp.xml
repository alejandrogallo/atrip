<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="Debug_8hpp" kind="file" language="C++">
    <compoundname>Debug.hpp</compoundname>
    <includes local="no">functional</includes>
    <includedby refid="SliceUnion_8hpp" local="no">SliceUnion.hpp</includedby>
    <includedby refid="Tuples_8hpp" local="no">Tuples.hpp</includedby>
    <includedby refid="Utils_8hpp" local="no">Utils.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="1">
        <label>Debug.hpp</label>
        <link refid="Debug_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>Equations.hpp</label>
        <link refid="Equations_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>RankMap.hpp</label>
        <link refid="RankMap_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Tuples.hpp</label>
        <link refid="Tuples_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Utils.hpp</label>
        <link refid="Utils_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Debug.hpp</label>
        <link refid="Debug_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SliceUnion.hpp</label>
        <link refid="SliceUnion_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Unions.hpp</label>
        <link refid="Unions_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Slice.hpp</label>
        <link refid="Slice_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Atrip.hpp</label>
        <link refid="Atrip_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Atrip.cxx</label>
        <link refid="Atrip_8cxx"/>
      </node>
      <node id="11">
        <label>atrip.hpp</label>
        <link refid="atrip_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structatrip_1_1IterationDescription" prot="public">atrip::IterationDescription</innerclass>
    <innernamespace refid="namespaceatrip">atrip</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="Debug_8hpp_1ad0141f91cd5e10e24d6a723624c437df" prot="public" static="no">
        <name>ATRIP_BENCHMARK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="18" column="11" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1af1c9f39d9f533bf92bcf20f1e925691e" prot="public" static="no">
        <name>ATRIP_DEBUG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="21" column="11" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1a5cc2051ac37b4867f478c20baa37ebcf" prot="public" static="no">
        <name>ATRIP_USE_DGEMM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="24" column="9" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1acd562c2a281e45f3c9e777ee85940952" prot="public" static="no">
        <name>OCD_Barrier</name>
        <param><defname>com</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="67" column="12" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1a321f8f2fd92f00a4da2fe732c4198132" prot="public" static="no">
        <name>WITH_OCD</name>
        <initializer>if (false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="68" column="11" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1a51c4696a55d683ddde13f60d905bc053" prot="public" static="no">
        <name>WITH_ROOT</name>
        <initializer>if (false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="69" column="11" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1ad6b642c97ff359593a6b7dc92f457995" prot="public" static="no">
        <name>WITH_SPECIAL</name>
        <param><defname>r</defname></param>
        <initializer>if (false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="70" column="11" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1a3f86e6b81edd7297ee6f9fd44cba3149" prot="public" static="no">
        <name>WITH_RANK</name>
        <initializer>if (false) std::cout &lt;&lt; <ref refid="structatrip_1_1Atrip_1a384ab5ffeacf4d84a5c614f6c0621a17" kindref="member">atrip::Atrip::rank</ref> &lt;&lt; &quot;: &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="71" column="11" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1a318fefe76cbd9fb484ad4457e2285053" prot="public" static="no">
        <name>WITH_DBG</name>
        <initializer>if (false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="72" column="11" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1ac0c1f2990209029f452a33e8ae2206cd" prot="public" static="no">
        <name>WITH_CRAZY_DEBUG</name>
        <initializer>if (false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="73" column="11" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1ae8924623ca601364965e3d88fb7f40fa" prot="public" static="no">
        <name>DBG</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="74" column="11" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Debug_8hpp_1aab91ba8612c2b67dad4376d30871eb95" prot="public" static="no">
        <name>LOG</name>
        <param><defname>level</defname></param>
        <param><defname>name</defname></param>
        <initializer>if (Atrip::rank == 0) std::cout &lt;&lt; name &lt;&lt; &quot;: &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" line="80" column="9" bodyfile="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2022<sp/>Alejandro<sp/>Gallo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[[file:../../atrip.org::*Macros][Macros:1]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="Debug_8hpp_1ad0141f91cd5e10e24d6a723624c437df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATRIP_BENCHMARK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>ATRIP_DONT_SLICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ATRIP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="Debug_8hpp_1af1c9f39d9f533bf92bcf20f1e925691e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ATRIP_DEBUG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>ATRIP_WORKLOAD_DUMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="Debug_8hpp_1a5cc2051ac37b4867f478c20baa37ebcf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATRIP_USE_DGEMM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>ATRIP_PRINT_TUPLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ATRIP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATRIP_DEBUG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ATRIP_DEBUG<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>message(&quot;WARNING:<sp/>You<sp/>have<sp/>OCD<sp/>debugging<sp/>ABC<sp/>triples<sp/>&quot;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;expect<sp/>GB<sp/>of<sp/>output<sp/>and<sp/>consult<sp/>your<sp/>therapist&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dbg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>HAVE_OCD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OCD_Barrier(com)<sp/>MPI_Barrier(com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_OCD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_ROOT<sp/>if<sp/>(atrip::Atrip::rank<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_SPECIAL(r)<sp/>if<sp/>(atrip::Atrip::rank<sp/>==<sp/>r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_RANK<sp/>std::cout<sp/>&lt;&lt;<sp/>atrip::Atrip::rank<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_CRAZY_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_DBG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DBG(...)<sp/>dbg(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>ATRIP_DEBUG<sp/>==<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>message(&quot;WARNING:<sp/>You<sp/>have<sp/>crazy<sp/>debugging<sp/>ABC<sp/>triples,&quot;<sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>expect<sp/>GB<sp/>of<sp/>output&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;dbg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OCD_Barrier(com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_OCD<sp/>if<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_ROOT<sp/>if<sp/>(atrip::Atrip::rank<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_SPECIAL(r)<sp/>if<sp/>(atrip::Atrip::rank<sp/>==<sp/>r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_RANK<sp/>std::cout<sp/>&lt;&lt;<sp/>atrip::Atrip::rank<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_CRAZY_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_DBG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DBG(...)<sp/>dbg(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>ATRIP_DEBUG<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>message(&quot;WARNING:<sp/>You<sp/>have<sp/>some<sp/>debugging<sp/>info<sp/>for<sp/>ABC<sp/>triples&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OCD_Barrier(com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_OCD<sp/>if<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_ROOT<sp/>if<sp/>(atrip::Atrip::rank<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_SPECIAL(r)<sp/>if<sp/>(atrip::Atrip::rank<sp/>==<sp/>r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_RANK<sp/>std::cout<sp/>&lt;&lt;<sp/>atrip::Atrip::rank<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_CRAZY_DEBUG<sp/>if<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_DBG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DBG(...)<sp/>dbg(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="Debug_8hpp_1acd562c2a281e45f3c9e777ee85940952" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OCD_Barrier(com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="Debug_8hpp_1a321f8f2fd92f00a4da2fe732c4198132" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_OCD<sp/>if<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="Debug_8hpp_1a51c4696a55d683ddde13f60d905bc053" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_ROOT<sp/>if<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="Debug_8hpp_1ad6b642c97ff359593a6b7dc92f457995" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_SPECIAL(r)<sp/>if<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="Debug_8hpp_1a3f86e6b81edd7297ee6f9fd44cba3149" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_RANK<sp/>if<sp/>(false)<sp/>std::cout<sp/>&lt;&lt;<sp/>atrip::Atrip::rank<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="Debug_8hpp_1a318fefe76cbd9fb484ad4457e2285053" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_DBG<sp/>if<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="Debug_8hpp_1ac0c1f2990209029f452a33e8ae2206cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WITH_CRAZY_DEBUG<sp/>if<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="Debug_8hpp_1ae8924623ca601364965e3d88fb7f40fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DBG(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros:1<sp/>ends<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[[file:../../atrip.org::*Macros][Macros:2]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="Debug_8hpp_1aab91ba8612c2b67dad4376d30871eb95" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG(level,<sp/>name)<sp/>if<sp/>(Atrip::rank<sp/>==<sp/>0)<sp/>std::cout<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros:2<sp/>ends<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[[file:../../atrip.org::*Macros][Macros:3]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ATRIP_NO_OUTPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>undef<sp/>LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LOG(level,<sp/>name)<sp/>if<sp/>(false)<sp/>std::cout<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros:3<sp/>ends<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[[file:../../atrip.org::IterationDescriptor][IterationDescriptor]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceatrip" kindref="compound">atrip</ref><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IterationDescription;</highlight></codeline>
<codeline lineno="95" refid="namespaceatrip_1af4afd47789d6e8e39ce3886578386d6d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceatrip_1af4afd47789d6e8e39ce3886578386d6d" kindref="member">IterationDescriptor</ref><sp/>=<sp/>std::function&lt;void(<ref refid="structatrip_1_1IterationDescription" kindref="compound">IterationDescription</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)&gt;;</highlight></codeline>
<codeline lineno="96" refid="structatrip_1_1IterationDescription" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structatrip_1_1IterationDescription" kindref="compound">IterationDescription</ref><sp/>{</highlight></codeline>
<codeline lineno="97" refid="structatrip_1_1IterationDescription_1a729a7ecbd8ddd5c1819f8f71552f5b06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceatrip_1af4afd47789d6e8e39ce3886578386d6d" kindref="member">IterationDescriptor</ref><sp/><ref refid="structatrip_1_1IterationDescription_1a729a7ecbd8ddd5c1819f8f71552f5b06" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="98" refid="structatrip_1_1IterationDescription_1a4c10b32db4be6c02541542b413228836" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structatrip_1_1IterationDescription_1a4c10b32db4be6c02541542b413228836" kindref="member">currentIteration</ref>;</highlight></codeline>
<codeline lineno="99" refid="structatrip_1_1IterationDescription_1af419953a3963a0870a66ecbccd1a90bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structatrip_1_1IterationDescription_1af419953a3963a0870a66ecbccd1a90bf" kindref="member">totalIterations</ref>;</highlight></codeline>
<codeline lineno="100" refid="structatrip_1_1IterationDescription_1a50a044d231825bfece4d3d35fe133a61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structatrip_1_1IterationDescription_1a50a044d231825bfece4d3d35fe133a61" kindref="member">currentElapsedTime</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceatrip_1a65234e51491c3fa418fcdfeb6e51ee1d" kindref="member">registerIterationDescriptor</ref>(<ref refid="namespaceatrip_1af4afd47789d6e8e39ce3886578386d6d" kindref="member">IterationDescriptor</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IterationDescriptor<sp/>ends<sp/>here</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/atrip/atrip/include/atrip/Debug.hpp"/>
  </compounddef>
</doxygen>
