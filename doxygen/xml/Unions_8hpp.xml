<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="Unions_8hpp" kind="file" language="C++">
    <compoundname>Unions.hpp</compoundname>
    <includes refid="SliceUnion_8hpp" local="no">atrip/SliceUnion.hpp</includes>
    <includedby refid="Atrip_8cxx" local="no">Atrip.cxx</includedby>
    <includedby refid="DatabaseCommunicator_8hpp" local="no">DatabaseCommunicator.hpp</includedby>
    <incdepgraph>
      <node id="23">
        <label>atrip/CUDA.hpp</label>
        <link refid="CUDA_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>atrip/Debug.hpp</label>
        <link refid="Debug_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>atrip/RankMap.hpp</label>
        <link refid="RankMap_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>atrip/Slice.hpp</label>
        <link refid="Slice_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>atrip/SliceUnion.hpp</label>
        <link refid="SliceUnion_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>atrip/Tuples.hpp</label>
        <link refid="Tuples_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Unions.hpp</label>
        <link refid="Unions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>atrip/Utils.hpp</label>
        <link refid="Utils_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>algorithm</label>
      </node>
      <node id="11">
        <label>array</label>
      </node>
      <node id="16">
        <label>cassert</label>
      </node>
      <node id="17">
        <label>chrono</label>
      </node>
      <node id="18">
        <label>climits</label>
      </node>
      <node id="22">
        <label>ctf.hpp</label>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="15">
        <label>map</label>
      </node>
      <node id="14">
        <label>math.h</label>
      </node>
      <node id="9">
        <label>mpi.h</label>
      </node>
      <node id="12">
        <label>numeric</label>
      </node>
      <node id="20">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="21">
        <label>string</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>DatabaseCommunicator.hpp</label>
        <link refid="DatabaseCommunicator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Unions.hpp</label>
        <link refid="Unions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Atrip.cxx</label>
        <link refid="Atrip_8cxx"/>
      </node>
      <node id="4">
        <label>DatabaseCommunicator.cxx</label>
        <link refid="DatabaseCommunicator_8cxx"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structatrip_1_1TAPHH" prot="public">atrip::TAPHH</innerclass>
    <innerclass refid="structatrip_1_1HHHA" prot="public">atrip::HHHA</innerclass>
    <innerclass refid="structatrip_1_1ABPH" prot="public">atrip::ABPH</innerclass>
    <innerclass refid="structatrip_1_1ABHH" prot="public">atrip::ABHH</innerclass>
    <innerclass refid="structatrip_1_1TABHH" prot="public">atrip::TABHH</innerclass>
    <innernamespace refid="namespaceatrip">atrip</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2022<sp/>Alejandro<sp/>Gallo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[[file:~/cuda/atrip/atrip.org::*Unions][Unions:1]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="SliceUnion_8hpp" kindref="compound">atrip/SliceUnion.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceatrip" kindref="compound">atrip</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F=</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sliceIntoVector</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ATRIP_SOURCES_IN_GPU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>DataPtr&lt;F&gt;<sp/>&amp;source</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>std::vector&lt;F&gt;<sp/>&amp;source</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sliceSize</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>CTF::Tensor&lt;F&gt;<sp/>&amp;toSlice</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>std::vector&lt;int64_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>low</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>std::vector&lt;int64_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>up</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>origin</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>std::vector&lt;int64_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>originLow</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>std::vector&lt;int64_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>originUp</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Thank<sp/>you<sp/>CTF<sp/>for<sp/>forcing<sp/>me<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/>std::vector&lt;int&gt;<sp/>up,<sp/>low;<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toSlice_<sp/>=<sp/>{<sp/>{up.begin(),<sp/>up.end()}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{low.begin(),<sp/>low.end()}<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>origin_<sp/>=<sp/>{<sp/>{originUp.begin(),<sp/>originUp.end()}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{originLow.begin(),<sp/>originLow.end()}<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Debug_8hpp_1a321f8f2fd92f00a4da2fe732c4198132" kindref="member">WITH_OCD</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Debug_8hpp_1a3f86e6b81edd7297ee6f9fd44cba3149" kindref="member">WITH_RANK</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;slicing<sp/>into<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceatrip_1a3178eea10b83bd01a95ca222be291c1f" kindref="member">pretty_print</ref>(toSlice_.up)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceatrip_1a3178eea10b83bd01a95ca222be291c1f" kindref="member">pretty_print</ref>(toSlice_.low)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceatrip_1a3178eea10b83bd01a95ca222be291c1f" kindref="member">pretty_print</ref>(origin_.up)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceatrip_1a3178eea10b83bd01a95ca222be291c1f" kindref="member">pretty_print</ref>(origin_.low)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ATRIP_DONT_SLICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>toSlice.slice(toSlice_.low.data(),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toSlice_.up.data(),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin_.low.data(),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin_.up.data(),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>message(&quot;WARNING:<sp/>COMPILING<sp/>WITHOUT<sp/>SLICING<sp/>THE<sp/>TENSORS&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ATRIP_SOURCES_IN_GPU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Utils_8hpp_1a684c98edc7c431d9fa25c1d75ae42f83" kindref="member">WITH_CHRONO</ref>(</highlight><highlight class="stringliteral">&quot;cuda:sources&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="CUDA_8hpp_1a2e6d5173a73fe3fdffed8acc4909f87e" kindref="member">_CHECK_CUDA_SUCCESS</ref>(</highlight><highlight class="stringliteral">&quot;copying<sp/>sources<sp/>data<sp/>to<sp/>device&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cuMemcpyHtoD(source,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toSlice.data,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sliceSize));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(source.data(),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toSlice.data,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(F)<sp/>*<sp/>sliceSize);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F=</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="81" refid="structatrip_1_1TAPHH" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structatrip_1_1TAPHH" kindref="compound">TAPHH</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;<sp/>{</highlight></codeline>
<codeline lineno="82" refid="structatrip_1_1TAPHH_1aa4be7b8ef10aa7f4fdddf632010da076" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structatrip_1_1TAPHH_1aa4be7b8ef10aa7f4fdddf632010da076" kindref="member">TAPHH</ref>(<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sourceTensor</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Nv</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>child_world</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>global_world</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>:<sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;(<sp/>{<ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::A</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::B</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::C</ref>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Nv,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>}<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>slices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Nv}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>np</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>child_world</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>global_world</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>Slice&lt;F&gt;::TA</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" kindref="member">init</ref>(sourceTensor);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structatrip_1_1TAPHH_1a4456102eedd76dd1aa09adc66b2882c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structatrip_1_1TAPHH_1a4456102eedd76dd1aa09adc66b2882c6" kindref="member">sliceIntoBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>it,<sp/>CTF::Tensor&lt;F&gt;<sp/>&amp;to,<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>from)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="100"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nv<sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" kindref="member">sliceLength</ref>[0],</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref><sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" kindref="member">sliceLength</ref>[1],</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" kindref="member">rankMap</ref>.find({</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structatrip_1_1Atrip_1a551003e8a101a98960032754ed4fd6ad" kindref="member">Atrip::rank</ref>),<sp/>it});</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sliceIntoVector&lt;F&gt;(this-&gt;<ref refid="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" kindref="member">sources</ref>[it],<sp/>this-&gt;sliceSize,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to,<sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/><sp/><sp/><sp/>{Nv,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from,<sp/>{a,<sp/>0,<sp/>0,<sp/>0},<sp/>{a+1,<sp/>Nv,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>});</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F=</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="117" refid="structatrip_1_1HHHA" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structatrip_1_1HHHA" kindref="compound">HHHA</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;<sp/>{</highlight></codeline>
<codeline lineno="118" refid="structatrip_1_1HHHA_1aff728e9a480579582405964457af0d65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structatrip_1_1HHHA_1aff728e9a480579582405964457af0d65" kindref="member">HHHA</ref>(<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sourceTensor</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Nv</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>child_world</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>global_world</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>:<sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;(<sp/>{<ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::A</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::B</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::C</ref>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{<ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>}<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>slices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Nv}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>parametrization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>np</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>child_world</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>global_world</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>Slice&lt;F&gt;::VIJKA</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" kindref="member">init</ref>(sourceTensor);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="structatrip_1_1HHHA_1aa1e0d1b558a5f2683742262857c72072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structatrip_1_1HHHA_1aa1e0d1b558a5f2683742262857c72072" kindref="member">sliceIntoBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>it,<sp/>CTF::Tensor&lt;F&gt;<sp/>&amp;to,<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>from)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="136"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref><sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" kindref="member">sliceLength</ref>[0],</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" kindref="member">rankMap</ref>.find({</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structatrip_1_1Atrip_1a551003e8a101a98960032754ed4fd6ad" kindref="member">Atrip::rank</ref>),<sp/>it});</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sliceIntoVector&lt;F&gt;(this-&gt;<ref refid="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" kindref="member">sources</ref>[it],<sp/>this-&gt;sliceSize,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to,<sp/><sp/><sp/>{0,<sp/>0,<sp/>0},<sp/><sp/><sp/><sp/>{<ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>},</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from,<sp/>{0,<sp/>0,<sp/>0,<sp/>a},<sp/>{<ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/>a+1});</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F=</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="150" refid="structatrip_1_1ABPH" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structatrip_1_1ABPH" kindref="compound">ABPH</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;<sp/>{</highlight></codeline>
<codeline lineno="151" refid="structatrip_1_1ABPH_1a1f8b1183e719c256ff2de4e181c84594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structatrip_1_1ABPH_1a1f8b1183e719c256ff2de4e181c84594" kindref="member">ABPH</ref>(<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sourceTensor</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Nv</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>child_world</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>global_world</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>:<sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;(<sp/>{<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::AB</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::BC</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::AC</ref></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::BA</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::CB</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::CA</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Nv,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>}<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>slices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Nv,<sp/>Nv}<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>parametrization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>np</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>child_world</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>global_world</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>Slice&lt;F&gt;::VABCI</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>2*6)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" kindref="member">init</ref>(sourceTensor);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structatrip_1_1ABPH_1adfbf9bb767c29498ca52ef495e8d5a9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structatrip_1_1ABPH_1adfbf9bb767c29498ca52ef495e8d5a9e" kindref="member">sliceIntoBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>it,<sp/>CTF::Tensor&lt;F&gt;<sp/>&amp;to,<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>from)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nv<sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" kindref="member">sliceLength</ref>[0],</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref><sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" kindref="member">sliceLength</ref>[1],</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el<sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" kindref="member">rankMap</ref>.find({</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structatrip_1_1Atrip_1a551003e8a101a98960032754ed4fd6ad" kindref="member">Atrip::rank</ref>),<sp/>it}),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>el<sp/>%<sp/>Nv,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>el<sp/>/<sp/>Nv;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sliceIntoVector&lt;F&gt;(this-&gt;<ref refid="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" kindref="member">sources</ref>[it],<sp/>this-&gt;sliceSize,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to,<sp/><sp/><sp/>{0,<sp/>0},<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Nv,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>},</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from,<sp/>{a,<sp/>b,<sp/>0,<sp/>0},<sp/>{a+1,<sp/>b+1,<sp/>Nv,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>});</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F=</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="189" refid="structatrip_1_1ABHH" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structatrip_1_1ABHH" kindref="compound">ABHH</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;<sp/>{</highlight></codeline>
<codeline lineno="190" refid="structatrip_1_1ABHH_1a170266890dd623dc1a4711c98b5455c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structatrip_1_1ABHH_1a170266890dd623dc1a4711c98b5455c6" kindref="member">ABHH</ref>(<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sourceTensor</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Nv</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>child_world</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>global_world</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>:<sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;(<sp/>{<ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::AB</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::BC</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::AC</ref>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{<ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>}<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>slices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Nv,<sp/>Nv}<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>parametrization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>np</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>child_world</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>global_world</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>Slice&lt;F&gt;::VABIJ</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" kindref="member">init</ref>(sourceTensor);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="structatrip_1_1ABHH_1ac862567131b2bcc5b7a4c46e2acb4a89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structatrip_1_1ABHH_1ac862567131b2bcc5b7a4c46e2acb4a89" kindref="member">sliceIntoBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>it,<sp/>CTF::Tensor&lt;F&gt;<sp/>&amp;to,<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>from)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nv<sp/>=<sp/>from.lens[0],</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref><sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" kindref="member">sliceLength</ref>[1],</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el<sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" kindref="member">rankMap</ref>.find({</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structatrip_1_1Atrip_1a551003e8a101a98960032754ed4fd6ad" kindref="member">Atrip::rank</ref>),<sp/>it}),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>el<sp/>%<sp/>Nv,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>el<sp/>/<sp/>Nv;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sliceIntoVector&lt;F&gt;(this-&gt;<ref refid="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" kindref="member">sources</ref>[it],<sp/>this-&gt;sliceSize,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to,<sp/><sp/><sp/>{0,<sp/>0},<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>},</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from,<sp/>{a,<sp/>b,<sp/>0,<sp/>0},<sp/>{a+1,<sp/>b+1,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>});</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F=</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="228" refid="structatrip_1_1TABHH" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structatrip_1_1TABHH" kindref="compound">TABHH</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;<sp/>{</highlight></codeline>
<codeline lineno="229" refid="structatrip_1_1TABHH_1a35d1049d09072784c92ba0657c9921ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structatrip_1_1TABHH_1a35d1049d09072784c92ba0657c9921ee" kindref="member">TABHH</ref>(<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sourceTensor</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Nv</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>child_world</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>MPI_Comm<sp/>global_world</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>:<sp/><ref refid="classatrip_1_1SliceUnion" kindref="compound">SliceUnion</ref>&lt;F&gt;(<sp/>{<ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::AB</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::BC</ref>,<sp/><ref refid="structatrip_1_1Slice" kindref="compound">Slice&lt;F&gt;::AC</ref>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{<ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>}<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>slices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Nv,<sp/>Nv}<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>parametrization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>np</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>child_world</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>global_world</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>Slice&lt;F&gt;::TABIJ</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1ad017d3fcd96ed11a302502d99f612622" kindref="member">init</ref>(sourceTensor);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="structatrip_1_1TABHH_1ac72a79ea1fa38bbd1e5a459e9b795eb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structatrip_1_1TABHH_1ac72a79ea1fa38bbd1e5a459e9b795eb9" kindref="member">sliceIntoBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>it,<sp/>CTF::Tensor&lt;F&gt;<sp/>&amp;to,<sp/>CTF::Tensor&lt;F&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>from)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>maybe<sp/>generalize<sp/>this<sp/>with<sp/>ABHH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nv<sp/>=<sp/>from.lens[0],</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref><sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a62e3f6bd006b32bf7045d49baba4f8bb" kindref="member">sliceLength</ref>[1],</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el<sp/>=<sp/>this-&gt;<ref refid="classatrip_1_1SliceUnion_1a71dac63ae681b56cf15387867cacad67" kindref="member">rankMap</ref>.find({</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structatrip_1_1Atrip_1a551003e8a101a98960032754ed4fd6ad" kindref="member">Atrip::rank</ref>),<sp/>it}),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>el<sp/>%<sp/>Nv,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>el<sp/>/<sp/>Nv;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sliceIntoVector&lt;F&gt;(this-&gt;<ref refid="classatrip_1_1SliceUnion_1afc72b5575b3e9d5d9f3be4e645537a62" kindref="member">sources</ref>[it],<sp/>this-&gt;sliceSize,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to,<sp/><sp/><sp/>{0,<sp/>0},<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>},</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from,<sp/>{a,<sp/>b,<sp/>0,<sp/>0},<sp/>{a+1,<sp/>b+1,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>,<sp/><ref refid="namespaceatrip_1ac382a0e309a4bd41a81731bbaf8839bd" kindref="member">No</ref>});</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unions:1<sp/>ends<sp/>here</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/atrip/atrip/include/atrip/Unions.hpp"/>
  </compounddef>
</doxygen>
